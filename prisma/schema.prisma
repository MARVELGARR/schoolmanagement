// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  email      String?   @unique
  emailVerified DateTime?
  image String?
  role String
  hashedPassword String?
  access_token String?
  token_type String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  account Account[]
}

model Account{
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String?
  providerAccountId String
  refresh_token String?
  access_token String?
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Teacher{
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  first_name   String
  last_name   String
  middle_name  String
  gender String
  email      String?   @unique
  phone String?
  image String?
  marital_status Maritalstatus
  age Int
  subjects    String[]   // Array of subjects the teacher teaches
  address     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
model Student{
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  first_name   String
  last_name   String
  gender String
  middle_name  String
  email      String?   @unique
  phone String?
  image String?
  class String?
  level String?
  age         Int
  subjects    String[]   // Array of subjects the teacher teaches
  address     String?
  religion  Religion
  grade       Int        // Grade/Class of the student    // Address of the teacher
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
model Parents{
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  first_name   String
  last_name   String
  middle_name  String
  gender String
  email      String?   @unique
  phone String?
  image String?
  age         Int  // Array of subjects the teacher teaches
  address     String?
  religion  Religion     // Grade/Class of the student    // Address of the teacher
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Role{
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  type   RoleType  
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

enum Maritalstatus {
  single
  married
  complicated
}

enum RoleType {
  ADMIN
  USER
  TEACHER
  STUDENT
  // Add other roles as needed
}
enum Religion {
  christain
  muslim  
  judiasm
  // Add other roles as needed
}
